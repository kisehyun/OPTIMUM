{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7d0dfbe8",
   "metadata": {},
   "source": [
    "### 말뭉치 단어 사전 커스텀 함수"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "dd14363d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sentencepiece as spm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "2d03e1c1",
   "metadata": {
    "id": "Gc9oEUCWnDeJ"
   },
   "outputs": [],
   "source": [
    "def train_sentencepiece(text, prefix, vocab_size = 5000):\n",
    "    \"\"\"\n",
    "    sentencepiece를 이용해 vocab 학습\n",
    "    :param text: 학습할 말뭉치\n",
    "    :param prefix: 저장할 vocab 이름\n",
    "    :param vocab_size: vocab 개수\n",
    "    \"\"\"\n",
    "    spm.SentencePieceTrainer.train(\n",
    "        f\"--input={text} --model_prefix={prefix} --vocab_size={vocab_size + 7}\" +  # 7은 특수문자 개수\n",
    "        \" --model_type=unigram\" +\n",
    "        \" --max_sentence_length=999999\" +  # 문장 최대 길이\n",
    "        \" --pad_id=0 --pad_piece=[PAD]\" +  # pad token 및 id 지정\n",
    "        \" --unk_id=1 --unk_piece=[UNK]\" +  # unknown token 및 id 지정\n",
    "        \" --bos_id=2 --bos_piece=[BOS]\" +  # begin of sequence token 및 id 지정\n",
    "        \" --eos_id=3 --eos_piece=[EOS]\" +  # end of sequence token 및 id 지정\n",
    "        \" --user_defined_symbols=[SEP],[CLS],[MASK]\" +  # 기타 추가 토큰 SEP: 4, CLS: 5, MASK: 6\n",
    "        \" --input_sentence_size=100000\" +  # 말뭉치에서 셈플링해서 학습\n",
    "        \" --shuffle_input_sentence=true\")  # 셈플링한 말뭉치 shuffle"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b174a98d",
   "metadata": {},
   "source": [
    "## 1. 전처리 없이 Sentencepiece 라이브러리 사용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2120aa49",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('corpus.txt') as f :\n",
    "    data = f.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "64b8cbab",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'아내가 드디어 출산하게 되어서 정말 신이 나.\\n아내분이 출산을 하시는군요. 정말 축하드려요.\\n아 지금 정말 신이 나.\\n잘 된 일이네요.\\n아기가 점점 클게 벌써 기대가 되네. 내가 '"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2081529e",
   "metadata": {},
   "outputs": [],
   "source": [
    "sentences = data.split('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c84bb79c",
   "metadata": {
    "id": "gjWFqKnWnDeK",
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "train_sentencepiece(\"corpus.txt\", \"text_5000\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c875baf4",
   "metadata": {},
   "outputs": [],
   "source": [
    "spm = spm.SentencePieceProcessor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1bf84678",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.Load('text_5000.model')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3492db4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5007"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.vocab_size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2ea02cd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = \"\"\"많이 서운하셨겠어요.\n",
    "친구들에게 서운함을 느꼈을 때 해결하는 방법이 있나요?\n",
    "카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.\n",
    "대화로 문제를 해결해오셨던 거군요?\n",
    "그렇다면 이번 일에는 어떻게 하실 예정인가요?\n",
    "직접 서운한 감정을 친구에게 얘기하려고 해.\n",
    "이번에도 대화를 통해 불편한 마음을 풀려고 하시는군요.\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "995ce2f7",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['▁많이',\n",
       " '▁서운하',\n",
       " '셨겠어요',\n",
       " '.',\n",
       " '▁친구들에게',\n",
       " '▁',\n",
       " '서',\n",
       " '운',\n",
       " '함',\n",
       " '을',\n",
       " '▁느꼈',\n",
       " '을',\n",
       " '▁때',\n",
       " '▁해결하는',\n",
       " '▁방법이',\n",
       " '▁있나요',\n",
       " '?',\n",
       " '▁카페',\n",
       " '에',\n",
       " '▁가서',\n",
       " '▁대화',\n",
       " '하거나',\n",
       " '▁같이',\n",
       " '▁술',\n",
       " '▁마시면',\n",
       " '서',\n",
       " '▁이야기',\n",
       " '했던',\n",
       " '▁것',\n",
       " '▁같아',\n",
       " '.',\n",
       " '▁대화로',\n",
       " '▁문제',\n",
       " '를',\n",
       " '▁해결해',\n",
       " '오',\n",
       " '셨던',\n",
       " '▁거군요',\n",
       " '?',\n",
       " '▁그렇다면',\n",
       " '▁이번',\n",
       " '▁일에',\n",
       " '는',\n",
       " '▁어떻게',\n",
       " '▁하실',\n",
       " '▁예정',\n",
       " '인가요',\n",
       " '?',\n",
       " '▁직접',\n",
       " '▁서운한',\n",
       " '▁감정',\n",
       " '을',\n",
       " '▁친구에게',\n",
       " '▁얘기',\n",
       " '하려고',\n",
       " '▁해',\n",
       " '.',\n",
       " '▁이번에도',\n",
       " '▁대화',\n",
       " '를',\n",
       " '▁통해',\n",
       " '▁불편한',\n",
       " '▁마음',\n",
       " '을',\n",
       " '▁풀려',\n",
       " '고',\n",
       " '▁하시는군요',\n",
       " '.']"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.encode_as_pieces(text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e877987e",
   "metadata": {},
   "source": [
    "## 2. Mecab으로 전처리 후 Sentencepiece 라이브러리 사용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ccadae28",
   "metadata": {},
   "outputs": [],
   "source": [
    "from konlpy.tag import Mecab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c1c55f00",
   "metadata": {},
   "outputs": [],
   "source": [
    "mecab = Mecab()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "af9e33e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "mecab_data = mecab.morphs(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "67cd2a1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "words = ''\n",
    "for word in mecab_data :\n",
    "    words += f' {word}'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "29762269",
   "metadata": {},
   "outputs": [],
   "source": [
    "words = words.replace('.', '.\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "420d08c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "' 아내 가 드디어 출산 하 게 되 어서 정말 신 이 나 .\\n 아 내분 이 출산 을 하 시 는군요 .\\n 정말 축하 드려요 .\\n 아 지금 정말 신 이 나 .\\n 잘 된 일 이 네요 .\\n'"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "words[:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "007f5c73",
   "metadata": {},
   "outputs": [],
   "source": [
    "f = open('mecab_text.txt', 'w')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "21cd9456",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('mecab_text.txt', 'w') as f :\n",
    "    f.write(words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "43445324",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('mecab_text.txt') as f :\n",
    "    data = f.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "69d5187b",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "' 아내 가 드디어 출산 하 게 되 어서 정말 신 이 나 .\\n 아 내분 이 출산 을 하 시 는군요 .\\n 정말 축하 드려요 .\\n 아 지금 정말 신 이 나 .\\n 잘 된 일 이 네요 .\\n'"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "21b3c51d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 말뭉치 사전 생성\n",
    "train_sentencepiece('mecab_text.txt', \"mc_text_5000\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "92154573",
   "metadata": {},
   "outputs": [],
   "source": [
    "spm = spm.SentencePieceProcessor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "7cf32e0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.Load('mc_text_5000.model')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "cba6982a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5007"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.vocab_size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "2250e04e",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = \"\"\"많이 서운하셨겠어요.\n",
    "친구들에게 서운함을 느꼈을 때 해결하는 방법이 있나요?\n",
    "카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.\n",
    "대화로 문제를 해결해오셨던 거군요?\n",
    "그렇다면 이번 일에는 어떻게 하실 예정인가요?\n",
    "직접 서운한 감정을 친구에게 얘기하려고 해.\n",
    "이번에도 대화를 통해 불편한 마음을 풀려고 하시는군요.\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "351bf581",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['▁많',\n",
       " '이',\n",
       " '▁',\n",
       " '서운',\n",
       " '하',\n",
       " '셨',\n",
       " '겠어',\n",
       " '요',\n",
       " '.',\n",
       " '▁친',\n",
       " '구',\n",
       " '들',\n",
       " '에게',\n",
       " '▁',\n",
       " '서운',\n",
       " '함',\n",
       " '을',\n",
       " '▁느꼈',\n",
       " '을',\n",
       " '▁때',\n",
       " '▁해결',\n",
       " '하',\n",
       " '는',\n",
       " '▁방',\n",
       " '법',\n",
       " '이',\n",
       " '▁',\n",
       " '있',\n",
       " '나',\n",
       " '요',\n",
       " '?',\n",
       " '▁카페',\n",
       " '에',\n",
       " '▁가',\n",
       " '서',\n",
       " '▁대화',\n",
       " '하',\n",
       " '거',\n",
       " '나',\n",
       " '▁같',\n",
       " '이',\n",
       " '▁술',\n",
       " '▁마',\n",
       " '시',\n",
       " '면',\n",
       " '서',\n",
       " '▁이야',\n",
       " '기',\n",
       " '했',\n",
       " '던',\n",
       " '▁',\n",
       " '것',\n",
       " '▁같',\n",
       " '아',\n",
       " '.',\n",
       " '▁대화',\n",
       " '로',\n",
       " '▁문제',\n",
       " '를',\n",
       " '▁해결',\n",
       " '해',\n",
       " '오',\n",
       " '셨',\n",
       " '던',\n",
       " '▁거',\n",
       " '군',\n",
       " '요',\n",
       " '?',\n",
       " '▁그렇',\n",
       " '다면',\n",
       " '▁이',\n",
       " '번',\n",
       " '▁일',\n",
       " '에',\n",
       " '는',\n",
       " '▁어떻',\n",
       " '게',\n",
       " '▁하',\n",
       " '실',\n",
       " '▁예정',\n",
       " '인가',\n",
       " '요',\n",
       " '?',\n",
       " '▁직',\n",
       " '접',\n",
       " '▁',\n",
       " '서운',\n",
       " '한',\n",
       " '▁감정',\n",
       " '을',\n",
       " '▁친',\n",
       " '구',\n",
       " '에게',\n",
       " '▁얘',\n",
       " '기',\n",
       " '하',\n",
       " '려고',\n",
       " '▁해',\n",
       " '.',\n",
       " '▁이',\n",
       " '번',\n",
       " '에',\n",
       " '도',\n",
       " '▁대화',\n",
       " '를',\n",
       " '▁통해',\n",
       " '▁불',\n",
       " '편',\n",
       " '한',\n",
       " '▁마음',\n",
       " '을',\n",
       " '▁풀려',\n",
       " '고',\n",
       " '▁하',\n",
       " '시',\n",
       " '는군',\n",
       " '요',\n",
       " '.']"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spm.encode_as_pieces(text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38320f04",
   "metadata": {},
   "source": [
    "### 결론\n",
    "- Sentencepiece는 주어진 텍스트를 별도의 전처리 없이 공백 등을 기준으로 토크나이징을 진행했다.\n",
    "- Mecab 사용을 하게 되면 형태소 분석(pos tagging)이 이루어지기 때문에 기존 방식과 달리 한 어절을 형태소를 기준으로 분할한다."
   ]
  }
 ],
 "metadata": {
  "accelerator": "TPU",
  "colab": {
   "collapsed_sections": [],
   "name": "과제2 질문.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
